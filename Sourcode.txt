    globals [rad speed-variation health robustness  closest_food vis_rand daytime starting_color current_color color_adjust color_range timer_reset  food_around_me  ] ;; creating a global variable called rad : speed-variation , health , robustness , closest-food ,vis_rand daytime starting_color current_color color_adjust color_range timer_reset  food_around_me
    breed [ peoples people]  ;; creating a population of humans to move around within the world and detect the zombies
    breed [zombies  zombie]  ;; creating a population of zombies that move around aimlessly and also detect humans
    breed [ food flowers]   ;; creating a population of plants for humans to feed from
    breed[ fire vpod ] ;; create a population of fire pods to defend the zombies
    turtles-own [ zombie_seen zombie_hit  ;;creating two variables used to count the total people seen and people hit
      per-vis-rad  per_vis_ang ;; two variables for personalised vision cones
      have_fire] ;; creating variables to store amount of fire held
    food-own [amount] ;; variable to store amount of food
    patches-own [ solid] ;;  creating a variable for the patches that are seen as solids


  to setup                                                                                    ;; creates a function called setup
      clear-all                                                                              ;; this clears the world
      reset-ticks                                                                            ;; this resets the tick counter
      set rad  5                                                                             ;; adding value to global variable rad
      set timer_reset 1000                                                                   ;; sets the global variable timer_reset  to 1000
      set daytime true                                                                       ;; sets global variable daytime to true
      set starting_color 80                                                                  ;; sets  starting_color to 80
      set current_color starting_color                                                       ;; sets global variable current_color to starting_color
      set color_range 10                                                                     ;; sets the global variable color_range to 10
      set color_adjust ( color_range / (timer_reset + 10 ))                                  ;; sets the global variable color_adjust to a range based on the variables above


      create-zombies number_of_zombies [                                                     ;;this creates new turtles created as zombies which are determined by the slider
        setxy random-xcor random-ycor                                                        ;; starting position set to a random location in the world
        set size 10                                                                          ;; sets the size of the zombie to 10
        set color red                                                                        ;; sets the color of the zombie to red
        set shape "person"                                                                   ;; sets the shape of the zombie to person
        set speed-variation  random 10                                                       ;; sets the speed-variation variable to a random value 10 (higher the value = faster the zombie)

      ]


    create-fire 20 [                                                                        ;; this creates an x amount of fire pods for the zombies to store and use
        make_fire]                                                                          ;; calls the make_fire function


      draw_buildings                                                                         ;; calls the draw_buildings function


      create-food 20  [grow_food]                                                            ;; creates an x amount of food and calls the grow_food function


      create-peoples number_of_peoples [                                                     ;; this creates new turtles created as peoples which are determined by the slider
        setxy random-xcor random-ycor                                                        ;; sets the starting position set to a random location in the world
        set size 10                                                                          ;; sets the size of the turtle to 10
        set shape "person"                                                                   ;; sets the shape of the turtle to person
        set color blue                                                                       ;; sets the color of the turtle to blue
        set health 50 + random 50                                                            ;;  sets the health of the turtle to 50 and adds a random allocation up to 50
        adjust_vision_cone                                                                   ;; calls the adjust_vision_cone function which sets up the vision cone
        set bravery 0 + random 100                                                        ;; sets the  bravery of the turtle to 0  and adds a random allocation up to 100
        set aggression 0 +  random  100                                                       ;;  sets the aggression of the turtle to 0 and adds a random allocation up to 100
        set vis_rand random 20                                                               ;; sets the global variable vis_rand and add a random allocation up to 20
        ; set heading 0                                                                      ;; sets the heading of the turtle to 0
        ;pen-down                                                                            ;; so the user can view where the turtle moves to
      ]
    end                                                                                      ;; end of the commands in the procedure

    to go                                                                                     ;; creates a function called go
      reset-ticks                                                                            ;; reset the tick counter
      make_zombie_move                                                                       ;; calls make_zombie_move function
      reset_patch_color                                                                      ;; calls reset_patch_color function
      make_peoples_move                                                                      ;; calls make_peoples_move function
      tick                                                                                   ;;  adds 1 to the tick counter
      grow_more_food                                                                         ;; calls grow_more_food function
    end                                                                                      ;; end of the commands in the procedure

    to adjust_vision_cone                                                                     ;; creates a function called adjust_vision_cone
      if ((vis_rad + random 20)*(health * 0.01)) > 0 [                                       ;; if the result is greater than 0
        set per-vis-rad ((vis_rad + vis_rand ) *(health * 0.01))                             ;;set the  personal vision radius has to factor randomness and health which means less health = less vision for the humans
      ]
      if ((vis_ang + random 20)*(health * 0.01)) > 0 [                                       ;; if the results is greater than 0
        set per_vis_ang ((vis_ang + vis_rand) * (health * 0.01))                             ;; set the personal vision angle to factor randomness and health
      ]
    end                                                                                      ;; end of the commands in the procedure

    to make_zombie_move                                                                       ;; creates a function called make_zombie_move
      ask zombies [                                                                          ;; asks all the zombies in the population to do what is in the bracket
        set color red                                                                        ;; sets the color of each zombie  to red
        detect_wall                                                                          ;; calls the detect_wall function
        forward zombie_speed +  (speed-variation * 0.2)                                      ;; moves the zombie forward due to the zombie speed variable
        if count peoples  = 0                                                                ;; if the counter for the humans reach 0 then display message.......
          [
            user-message (word "The zombies Win")                                            ;; display to the user "the zombies win"
        ]
      ]
      ask zombies[                                                                           ;; asks all the zombies in the population to do what is in the bracket
        ifelse health > 0 [                                                                  ;; if health is greater than 0 then ....
          let have_seen_person people_function                                               ;; this creates a local variable called have_seen_person the fills it with the return of the function people_function
          ifelse ( have_seen_person = true ) [                                               ;; if local variable have_seen_person is true...
            right 180                                                                        ;; set heading of the butterfly to 180 (turn around to avoid!)
          ][
              right (random bwr - (bwr / 2))                                                 ;; this turns the butterfly right relative to its current heading by a random degree number using the range set within bwr NOTE: if negative it will turn left
          ]]
          [
          set color gray                                                                      ;; set color to gray to indicate dead zombie
          die                                                                                 ;; this kills off the zombie
          ]
      ]


    end                                                                                       ;; end of the commands in the procedure

    to-report food_function [sensitivity]                                                     ;; creates a reporting function called food_function and expects a value for sensitivity
      set food_around_me other ( food in-radius sensitivity )                                 ;; this sets the food_around_me variable to the ID's of the food within the sensitivity radius
      set closest_food min-one-of food_around_me [distance myself]                            ;; this sets the closest_food variable to the ID of the closest food source
      let can_smell_food [false]                                                              ;; this creates a local variable called can_smell_food and sets it to false
      let eating_food [false]                                                                 ;; this creates a local variable called eating_food and sets it to false

      if health < 100 [                                                                       ;; if health is less than 100 then...
        ask food in-radius rad [                                                              ;; this sets up a radius around the food to the value of the global variable rad which we are using for collision detection with people
          ifelse amount > 0 [                                                                 ;; if amount (a food variable) is greater than 0...
            set eating_food true                                                              ;; set the local variable called eating_food to true indicating the butterfly is eating
            set amount amount - 5                                                             ;; reduces 5 from the amount variable in the food
            set color color - .25                                                             ;; reduce the color intensity of the food by .25
          ][
            die                                                                               ;; there is no food left so kill the good agent
          ]
        ]
      ]

      if eating_food = true [                                                                 ;; if eating_food is true then...
        set health health + 5                                                                 ;; add 5 to health of butterfly
        adjust_vision_cone                                                                    ;; calls the adjust_vision_cone
      ]

      if (closest_food != nobody) [                                                           ;; if closest_food is not empty (the butterfly can smell food in range) then...
        set can_smell_food true                                                               ;; set can_smell_food to true
      ]
      report can_smell_food                                                                   ;; return value of can_smell_food to location where function was called
    end                                                                                       ;; end of the commands in the procedure


    to-report people_function                                                                 ;; creates a reporting function called people_function
      let seen [false]                                                                        ;; this creates a local variable called seen
      let hit [false]                                                                         ;; this creates a local variable called hit
      if hit = true [                                                                     ;; if statement based on the local variable hit, if seen = true then...
        ifelse have_fire > 0 [                                                               ;; if have_fire is greater that 0 then...
          ask zombie zombie_hit [die]                                                         ;; kill off the person hit
          set have_fire have_fire - 1                                                        ;; remove 1 from the have_fire of the turtle
        ][
          set zombie_hit  zombie_hit + 1                                                      ;; add 1 to the people_hit count
          set color green                                                                     ;; set color of butterfly to green
          set health health - robustness                                                      ;; adjust health of butterfly to health - collision penalty (robustness)
        adjust_vision_cone                                                                    ;; adjust_vision_cone
         ]
      ]

      report seen                                                                             ;; return true or false based in local variable seen
    end                                                                                       ;; end of the commands in the procedure


    to reset_patch_color                                                                      ;; creates a function called reset_patch_color
      ifelse daytime = true [                                                                 ;; ifelse global variable daytime = true
        set current_color current_color - color_adjust                                        ;; set adjusts  the global variable current_color using the variable color_adjust
      ]
      [
        set current_color current_color + color_adjust                                        ;; set adjusts the global variable current_color using the variable color_adjust
      ]
      ask patches [                                                                           ;; asks all the patches in the population to do what is in the brackets
        if solid = false [                                                                    ;; if the patch variable is false
          set pcolor current_color                                                            ;; sets the color of each patch to the current_color
      ]]
    end                                                                                       ;; end of the commands in the procedure

    to make_fire                                                                              ;;  creates a function called make_fire
      setxy random-xcor random-ycor                                                            ;; sets the population of the fire to a random location in the world
      set color orange                                                                         ;; sets the color of the fire to green
      set size 10                                                                              ;; sets the size of the fire to 10
      set shape "fire"                                                                            ;; sets the shape of the fire to a x
    end                                                                                        ;; end of the commands in the procedure


    to pickup_fire                                                                            ;; creates a function called pickup_fire
      let pickup [false]                                                                       ;; let creates a local variable called pickup and sets it to false
      ask fire in-radius rad [                                                                ;; sets a radius around the fire which burns the zombies by collision detection with the fire allowing the humans to pick it up (global variable : rad)
        set pickup true                                                                        ;; sets the local variable pickup to true
        die ]                                                                                  ;; kills the fire from the world
      if pickup = true [                                                                       ;;  if pickup is true then
        set have_fire have_fire + 1                                                          ;; add 1 to have_fire count on the zombie
      ]
    end                                                                                        ;; end of the commands in the procedure



    to grow_food                                                                               ;; creates a function to grow_food
      setxy random-xcor random-ycor                                                            ;; sets the position of the food to a random location in the world
      set color yellow                                                                         ;; sets the color of the food to yellow
      set size 10                                                                              ;; sets the size of the food to 10
      set shape "plant"                                                                        ;; sets the shape of the food to a plant
      set amount random 100                                                                    ;; sets the amount of food per plant to a random value up to 100
    end                                                                                        ;; end of the commands in the procedure

    to grow_more_food                                                                          ;;  creates a function to grow_more_food
      if ticks > timer_reset                                                                   ;; sets the current number of ticks to greater than 1000
      [
        ask patch random-xcor random-ycor [                                                    ;; ask 1 patch in a random location to do set tasks
          sprout-food 2 [grow_food]                                                            ;; create new food (2 in this instance) then call the grow_food function which sets parameters for the food
        ]
        ifelse daytime = true [                                                                ;; ifelse the global variable daytime = true
          set daytime false                                                                    ;; set the global variable daytime to false
        ]
        [
          set daytime true                                                                     ;; set the global variable daytime to true
        ]
        reset-ticks                                                                            ;; resets the tick counter back to 0
      ]
  end                                                                                          ;; end of the commands in the procedure

    to make_peoples_move                                                                       ;; creates a function called make_peoples_move
      ask peoples [                                                                            ;; ask all the peoples in the population to do what is in the bracket

        let current_zombie  0                                                                  ;; let creates a local variable called current_zombie and assigns a value of 0 to it
        let seen [false]                                                                       ;; creates a local variable called seen
        let hit [false]                                                                        ;; creates a local variable called hit
        ask peoples in-cone per-vis-rad vis_ang [                                              ;; sets the vision cone with parameters to detect people
          set color blue                                                                       ;; set the color of the person detected within the cone to green
        ]
        if count zombies = 0                                                                   ;; if count zombies counter is equal to 0 then display message....
        [
          user-message (word "The humans Win")                                                 ;; "The Humans Win"
        ]

        show_visualisations                                                                    ;; calls function called show visualisations
        ask zombies in-cone per-vis-rad vis_ang [                                              ;; sets up all the zombies with parameters from per-vis-rad and vis_ang  that are detected to ....
          set seen true                                                                        ;; if detected
          set color green                                                                      ;; sets the color of the zombie to green

        ]
         pickup_fire                                                                          ;; calls the pickup_fire function
        if health > 0  [                                                                       ;; if health is greater than 0 then (still alive)
        let can_smell_food food_function 30                                                    ;; this creates a local variable called can_smell_food then  returns the function food_function whilst passing 30
      if ( can_smell_food = true ) and ( health < 100) [                                       ;; if local variable can_smell_food is true...
        set heading ( towards closest_food )                                                   ;; set heading towards closest food source
        ]]

        ask zombies in-radius rad [                                                            ;; asks sets up a radius for collision radius if the switch is set to true
         set hit true                                                                          ;; if hit = true .....
          set current_zombie who                                                               ;; sets the current_zombie to an int gt or eq to 0
          show zombie_hit ]                                                                    ;; sets the variable zombie_hit to true to indicate the person has collided with a zombie
        if show_col_rad = true [                                                               ;;  switch on the visualtion of the collision radius if the switch is set to true
          ask patches in-radius rad [                                                          ;;   this selects all the patches to follow  a command that sets up a radius around the person for collision detection with zombies
            set pcolor black]                                                                  ;; sets patch color to black
        ]

        if seen = true  [                                                                      ;; ;; sets the heading of the butterfly to 180if seen  is set to true
           ifelse (bravery < random 100) [                                                     ;; if bravery is lt than  random allocation of 100....
              set color blue                                                                   ;; set the color of the zombie to blue
              right 180                                                                        ;; sets the heading of the human to 180
            ][
          right (random pwr - ( pwr / 2 ) )                                                    ;;  this turns the zombie to its current heading by a random degree number
             ]
             ]
        if hit = true [                                                                        ;; if statement based on the local variable hit
          set zombie_hit zombie_hit + 1                                                        ;; add 1 to the people_hit count

         ifelse (aggression > random 100) [                                                    ;; if aggression is gt random allocation of 100 then ...
           set health health - 25                                                              ;; subtract 25 from the health of humans in the model
           ask zombie current_zombie[                                                          ;; ask all the zombies in the population to do what is in the bracket
              die                                                                              ;; kills the current zombie
          ]]  [
            set color green                                                                    ;;  set color of the zombie to green
            set breed zombies                                                                  ;; sets the breed to zombies
            set shape "person"]]                                                               ;; sets the shape of the zombie to person

        adjust_vision_cone                                                                     ;; calls the adjust_vision_cone function
        forward peoples_speed                                                                  ;; moves person forward
      ]
    end                                                                                        ;; end of commands in the procedure

    to draw_buildings                                                                          ;; creates a function to draw_buildings
      ask patches [                                                                            ;; this selects all the patches to follow  a command
        set solid false                                                                        ;; sets the patch variable solid to false for all patches
      ]
      ask patches with [ pxcor >= -20 and pxcor <= 20 and pycor >= -20 and pycor <= 20 ] [     ;; selects only patches that meet the parameters
        set pcolor magenta                                                                       ;; color of all patches selected to pink
        set solid true                                                                         ;; sets the variable solid to true for all patches that are selected
      ]
    end                                                                                        ;; end of commands in the procedure

    to detect_wall                                                                             ;; creates a function called detect_wall
      if [solid] of patch-ahead 1 = true [                                                     ;; if patch varible of 1 patch ahead is true then...
        right 180                                                                              ;; turn around to opposite direction
      ]
    end                                                                                        ;; end of commands in the procedure

    to show_visualisations                                                                     ;; creates a function called show_visulisations
      if show_col_rad = true [                                                                 ;; if switch is set to true then this will switch on the visulisation of the collision radius
        ask patches in-radius rad [                                                            ;; sets a radius around the zombie by the global variable rad
          if solid = false [                                                                   ;; if the patch is not solid....
            set pcolor orange]                                                                 ;; sets the patch color to orange
      ]]
      if show_vis_cone = true [                                                                ;; if the switch is set to true then this will switch on the visulisation of the vision_cone
        ask patches in-cone per-vis-rad per_vis_ang [                                          ;; sets up a vision_cone in front of the person set by the value per-vis-rad and per_vis_ang
          if solid = false [                                                                   ;; checks the patch is not solid
            set pcolor sky                                                                     ;; sets the patch color to pink
          ]
      ]]
    end                                                                                        ;; end of commands in the procedure